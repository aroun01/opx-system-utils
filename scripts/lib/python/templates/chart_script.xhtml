<script type="text/javascript">
  FusionCharts.ready(function(){
    var fusion${name} = new FusionCharts({
    type: 'realtimeline',
    renderAt: 'chart-${name}',
    id: '${name}Chart',
    width: '${hsize}',
    height: '${vsize}',
    dataFormat: 'json',
    dataSource: {
        "chart": {
            "caption": "${caption}",
            "subcaption": "${sub_caption}",
            "xAxisName": "${xAxis}",
            "yAxisName": "${yAxis}",
            "numberPrefix": "${numPrefix}",
            "refreshinterval": "1",
            "yaxisminvalue": "${lowLimit}",
            "yaxismaxvalue": "${upLimit}",
            "numdisplaysets": "${displayset}",
            "labeldisplay": "rotate",
            "showValues": "0",
            "showRealTimeValue": "0",
            //Theme
            "theme": "fint"
        },
        "categories": [{
            "category": ${labels}
        }],
        "dataset": [{
            "data": ${values}
        }]
    },
    "events": {
        "initialized": function(e) {
            var flag = 0;

            function addLeadingZero(num) {
                return (num <= 9) ? ("0" + num) : num;

            }

            function updateData() {
                // Get reference to the chart using its ID
                var chartRef = e.sender,
                    // We need to create a querystring format incremental update, containing
                    // label in hh:mm:ss format
                    // and a value.
                    currDate = new Date(),
                    label = addLeadingZero(currDate.getUTCHours()) + ":" +
                    addLeadingZero(currDate.getUTCMinutes()) + ":" +
                    addLeadingZero(currDate.getUTCSeconds()),
                    xmlHttp = new XMLHttpRequest();
                    xmlHttp.open( "GET", '${fetch}', false );
                    xmlHttp.send( null );
                    var num = xmlHttp.responseText;
                    // Build Data String in format &label=...&value=...
                    strData = "&label=" + label + "&value=" + num;
                flag = flag + 1;
                if (flag === 1) {
                    strData = "&label=" + label + "&value=" + "&vline=1&vLineLabel=Page Reload&vLineColor=#666666&vLineThickness=2&vLineDashed=1";
                }
                // Feed it to chart.
                chartRef.feedData(strData);
            }

            e.sender.chartInterval = setInterval(function() {
                updateData();
            }, ${pullRate});
        },
        "disposed": function(evt, args) {
            clearInterval(evt.sender.chartInterval);
        }
    }
}
);
    fusion${name}.render();
});
</script>


